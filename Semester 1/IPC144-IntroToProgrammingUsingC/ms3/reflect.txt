/*
*****************************************************************************
                        Assignment 1 - Milestone 3
Full Name  : Sampreet Klair
Student ID#: 145031225
Email      : skalir2@myseneca.ca
Section    : ZCC

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
*****************************************************************************
*/

1. According to the requirement of the assignment, three functions were created that were not specified or provided. The first function is - int timeSlotAvailable(struct Date date, struct Time time, struct Appointment *app, int maxAppointments); which returns a value of int type, contains struct Date date, struct Time time, struct Appointment *app, int maxAppointments as the parameters and is declared by the name timeSlotAvailable. This function is used to check if a time slot is available for booking according to the given inputs. The contribution of this function to the program was that this function helped the user to know if the inputted time slot was available for booking. The second function is - int nextSlotAvailable(struct Appointment *app, int maxAppointments); which returns a value of int type, contains struct Appointment *app, int maxAppointments as parameters and is declared by the name nextSlotAvailable. This function is used to check when the next time slot is available for booking. For using this function, the user will call this function and get a value in return depicting the very next time slot available. The contribution of this function to the program was that this function helped the user to know when the very next slot is available, so that it can be booked. The third function is - int validAppointment(int patientNumber, struct Date date, struct Appointment *app, int maxAppointments); which returns a value of int type, contains int patientNumber, struct Date date, struct Appointment *app, int maxAppointments as the parameters and is declared by the name validAppointment. This function is used to check if the appointment date and time inputted by the user is valid or not. This function takes patient number, date, a struct Appointment *app and maxAppointments as the input parameters and returns if the inputted data has a valid appointment or not.

2. The deliberate minimal use of scanf function calls in the client.c source code file serves important purposes in enhancing the overall functionality and user experience of the code. Due to this the program becomes more efficient and is better in terms of design. By reducing the number of scanf calls we reduce the likelihood of input-related errors and mismatches. scanf is a type of formatted input taking method in which we define what the format should be while taking the input. In contrast, if we use an unformatted input method like fgets, we do not format the input type which reduced the errors relating to mismatched input type leading to more robust code. Moreover, using multiple scanf statements can lead to disrupting in the programâ€™s flow which can consume unnecessary processing time. So, by minimizing the scanf calls in a program, we reduce the risk of input-related errors and maintain the efficiency of a program.

3. In the first question above, I have identified three functions that I created which were not specified or provided. The first function is declared and named as int timeSlotAvailable(struct Date date, struct Time time, struct Appointment *app, int maxAppointments);, the second function is declared and named as int nextSlotAvailable(struct Appointment *app, int maxAppointments);, and the third function is declared and named as int validAppointment(int patientNumber, struct Date date, struct Appointment *app, int maxAppointments);. I have put all these three functions in the UTILITY FUNCTIONS module because I think these functions increase the utility of the program. The factors and considerations I took in consideration while taking this decision was that I was analyzing each and every module and considering why these functions cannot be put there. These functions cannot be put in DISPLAY FUNCTIONS module because these were not giving any output. These functions cannot be put in MENU & ITEM SELECTION FUNCTIONS module because these were not responsible for selecting any menu or item. These functions cannot be put in USER INPUT FUNCTIONS because these functions were not responsible for taking any data as input. These functions cannot be put in FILE FUNCTIONS module because these functions were not responsible for importing anything from the file.